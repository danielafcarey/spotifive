// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Search matches the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Search
    accessToken="a"
    artist={
        Object {
            "artist": Object {
              "artistId": "1",
            },
            "artistError": null,
          }
    }
    history={
        Object {
            "push": [Function],
          }
    }
    searchResults={
        Object {
            "searchError": null,
            "searchResults": Array [],
          }
    }
    submitUpdateArtist={[Function]}
    submitUpdateSearch={[Function]}
    updateArtist={[Function]}
    user={
        Object {
            "loggedIn": true,
            "userInfo": Object {
              "userId": "1",
            },
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <form
          onSubmit={[Function]}
>
          <input
                    list="artist-suggestions"
                    onChange={[Function]}
                    placeholder="Search for an artist"
                    value=""
          />
          <ArtistSuggestions
                    suggestions={Array []}
          />
          <p
                    className="search-error"
          />
          <button
                    disabled={true}
          >
                    Search
          </button>
</form>,
        <Instructions />,
      ],
      "className": "search",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <input
              list="artist-suggestions"
              onChange={[Function]}
              placeholder="Search for an artist"
              value=""
/>,
            <ArtistSuggestions
              suggestions={Array []}
/>,
            <p
              className="search-error"
/>,
            <button
              disabled={true}
>
              Search
</button>,
          ],
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "list": "artist-suggestions",
              "onChange": [Function],
              "placeholder": "Search for an artist",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "suggestions": Array [],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "",
              "className": "search-error",
            },
            "ref": null,
            "rendered": "",
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Search",
              "disabled": true,
            },
            "ref": null,
            "rendered": "Search",
            "type": "button",
          },
        ],
        "type": "form",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <form
            onSubmit={[Function]}
>
            <input
                        list="artist-suggestions"
                        onChange={[Function]}
                        placeholder="Search for an artist"
                        value=""
            />
            <ArtistSuggestions
                        suggestions={Array []}
            />
            <p
                        className="search-error"
            />
            <button
                        disabled={true}
            >
                        Search
            </button>
</form>,
          <Instructions />,
        ],
        "className": "search",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <input
                list="artist-suggestions"
                onChange={[Function]}
                placeholder="Search for an artist"
                value=""
/>,
              <ArtistSuggestions
                suggestions={Array []}
/>,
              <p
                className="search-error"
/>,
              <button
                disabled={true}
>
                Search
</button>,
            ],
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "list": "artist-suggestions",
                "onChange": [Function],
                "placeholder": "Search for an artist",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "suggestions": Array [],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "",
                "className": "search-error",
              },
              "ref": null,
              "rendered": "",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Search",
                "disabled": true,
              },
              "ref": null,
              "rendered": "Search",
              "type": "button",
            },
          ],
          "type": "form",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Search matches the snapshot if there are search results 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Search
    accessToken="a"
    artist={
        Object {
            "artist": Object {
              "artistId": "1",
            },
            "artistError": null,
          }
    }
    history={
        Object {
            "push": [Function],
          }
    }
    searchResults={
        Object {
            "searchResults": Array [
              Object {
                "id": 1,
                "name": "hi",
              },
            ],
          }
    }
    submitUpdateArtist={[Function]}
    submitUpdateSearch={[Function]}
    updateArtist={[Function]}
    user={
        Object {
            "loggedIn": true,
            "userInfo": Object {
              "userId": "1",
            },
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <form
          onSubmit={[Function]}
>
          <input
                    list="artist-suggestions"
                    onChange={[Function]}
                    placeholder="Search for an artist"
                    value=""
          />
          <ArtistSuggestions
                    suggestions={Array []}
          />
          <p
                    className="search-error"
          />
          <button
                    disabled={true}
          >
                    Search
          </button>
</form>,
        <SearchResults
          searchResults={
                    Object {
                              "searchResults": Array [
                                Object {
                                  "id": 1,
                                  "name": "hi",
                                },
                              ],
                            }
          }
          selectArtist={[Function]}
/>,
      ],
      "className": "search",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <input
              list="artist-suggestions"
              onChange={[Function]}
              placeholder="Search for an artist"
              value=""
/>,
            <ArtistSuggestions
              suggestions={Array []}
/>,
            <p
              className="search-error"
/>,
            <button
              disabled={true}
>
              Search
</button>,
          ],
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "list": "artist-suggestions",
              "onChange": [Function],
              "placeholder": "Search for an artist",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "suggestions": Array [],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "",
              "className": "search-error",
            },
            "ref": null,
            "rendered": "",
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Search",
              "disabled": true,
            },
            "ref": null,
            "rendered": "Search",
            "type": "button",
          },
        ],
        "type": "form",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "searchResults": Object {
            "searchResults": Array [
              Object {
                "id": 1,
                "name": "hi",
              },
            ],
          },
          "selectArtist": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <form
            onSubmit={[Function]}
>
            <input
                        list="artist-suggestions"
                        onChange={[Function]}
                        placeholder="Search for an artist"
                        value=""
            />
            <ArtistSuggestions
                        suggestions={Array []}
            />
            <p
                        className="search-error"
            />
            <button
                        disabled={true}
            >
                        Search
            </button>
</form>,
          <SearchResults
            searchResults={
                        Object {
                                    "searchResults": Array [
                                      Object {
                                        "id": 1,
                                        "name": "hi",
                                      },
                                    ],
                                  }
            }
            selectArtist={[Function]}
/>,
        ],
        "className": "search",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <input
                list="artist-suggestions"
                onChange={[Function]}
                placeholder="Search for an artist"
                value=""
/>,
              <ArtistSuggestions
                suggestions={Array []}
/>,
              <p
                className="search-error"
/>,
              <button
                disabled={true}
>
                Search
</button>,
            ],
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "list": "artist-suggestions",
                "onChange": [Function],
                "placeholder": "Search for an artist",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "suggestions": Array [],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "",
                "className": "search-error",
              },
              "ref": null,
              "rendered": "",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Search",
                "disabled": true,
              },
              "ref": null,
              "rendered": "Search",
              "type": "button",
            },
          ],
          "type": "form",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "searchResults": Object {
              "searchResults": Array [
                Object {
                  "id": 1,
                  "name": "hi",
                },
              ],
            },
            "selectArtist": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Search matches the snapshot if there is no artist selected 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Search
    accessToken="a"
    artist={
        Object {
            "artist": Object {},
            "artistError": null,
          }
    }
    history={
        Object {
            "push": [Function],
          }
    }
    searchResults={
        Object {
            "searchError": null,
            "searchResults": Array [],
          }
    }
    submitUpdateArtist={[Function]}
    submitUpdateSearch={[Function]}
    updateArtist={[Function]}
    user={
        Object {
            "loggedIn": true,
            "userInfo": Object {
              "userId": "1",
            },
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <form
          onSubmit={[Function]}
>
          <input
                    list="artist-suggestions"
                    onChange={[Function]}
                    placeholder="Search for an artist"
                    value=""
          />
          <ArtistSuggestions
                    suggestions={Array []}
          />
          <p
                    className="search-error"
          />
          <button
                    disabled={true}
          >
                    Search
          </button>
</form>,
        <Instructions />,
      ],
      "className": "search",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <input
              list="artist-suggestions"
              onChange={[Function]}
              placeholder="Search for an artist"
              value=""
/>,
            <ArtistSuggestions
              suggestions={Array []}
/>,
            <p
              className="search-error"
/>,
            <button
              disabled={true}
>
              Search
</button>,
          ],
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "list": "artist-suggestions",
              "onChange": [Function],
              "placeholder": "Search for an artist",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "suggestions": Array [],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "",
              "className": "search-error",
            },
            "ref": null,
            "rendered": "",
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Search",
              "disabled": true,
            },
            "ref": null,
            "rendered": "Search",
            "type": "button",
          },
        ],
        "type": "form",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <form
            onSubmit={[Function]}
>
            <input
                        list="artist-suggestions"
                        onChange={[Function]}
                        placeholder="Search for an artist"
                        value=""
            />
            <ArtistSuggestions
                        suggestions={Array []}
            />
            <p
                        className="search-error"
            />
            <button
                        disabled={true}
            >
                        Search
            </button>
</form>,
          <Instructions />,
        ],
        "className": "search",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <input
                list="artist-suggestions"
                onChange={[Function]}
                placeholder="Search for an artist"
                value=""
/>,
              <ArtistSuggestions
                suggestions={Array []}
/>,
              <p
                className="search-error"
/>,
              <button
                disabled={true}
>
                Search
</button>,
            ],
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "list": "artist-suggestions",
                "onChange": [Function],
                "placeholder": "Search for an artist",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "suggestions": Array [],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "",
                "className": "search-error",
              },
              "ref": null,
              "rendered": "",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Search",
                "disabled": true,
              },
              "ref": null,
              "rendered": "Search",
              "type": "button",
            },
          ],
          "type": "form",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Search matches the snapshot if user is not logged in 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Search
    accessToken="a"
    artist={
        Object {
            "artist": Object {
              "artistId": "1",
            },
            "artistError": null,
          }
    }
    history={
        Object {
            "push": [Function],
          }
    }
    searchResults={
        Object {
            "searchError": null,
            "searchResults": Array [],
          }
    }
    submitUpdateArtist={[Function]}
    submitUpdateSearch={[Function]}
    updateArtist={[Function]}
    user={
        Object {
            "loggedIn": false,
            "userInfo": Object {
              "userId": "1",
            },
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "push": false,
      "to": "/",
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "push": false,
        "to": "/",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
